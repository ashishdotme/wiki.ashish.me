name: Build notes.ashish.me

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        # We need full history to introspect created/updated:
        with:
          fetch-depth: 0
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Run script
        run: deno run -A build.ts
      - name: Commit and push if README changed
        run: |-
          git diff
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff --quiet || (git add . && git commit -m "chore: update README")
          git push
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9.21
      - uses: actions/cache@v4
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build database
        run: python build_database.py
      - name: Update README
        run: |-
          python build_readme.py --rewrite
          cat readme.md
      - name: Commit and push if README changed
        run: |-
          git pull
          git diff
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff --quiet || (git add . && git commit -m "chore: update README")
          git push
      - name: Create Summary
        run: |-
          touch SUMMARY.md
      # - name: Setup mdBook
      #   uses: peaceiris/actions-mdbook@v2
      #   with:
      #     mdbook-version: 'latest'
      #     # mdbook-version: 'latest'
      - uses: brndnmtthws/rust-action-cargo-binstall@v1
        with:
          packages: mdbook mdbook-mermaid mdbook-autosummary mdbook-katex mdbook-repl mdbook-mdinclude mdbook-embedify
      - run: mdbook build
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          publish_dir: book
          force_orphan: true
      - name: Deploy Datasette using Vercel
        env:
          NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
        run: |-
          npm i -g vercel@latest
          datasette publish vercel notes.db \
            --token $NOW_TOKEN \
            --branch 0.64.x \
            --project ashish-notes \
            --metadata .github/metadata.yaml \
            --static static:static \
            --install datasette-template-sql \
            --install "datasette-atom>=0.7" \
            --install datasette-json-html \
            --install beautifulsoup4 \
            --install datasette-debug-asgi \
            --install "datasette-graphql>=0.12" \
            --install datasette-media \
            --plugins-dir .github/plugins \
            --template-dir .github/templates \
            --public
